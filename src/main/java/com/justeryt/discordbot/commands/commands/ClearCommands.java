package com.justeryt.discordbot.commands.commands;

import com.justeryt.discordbot.commands.types.ServerCommand;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.*;
import net.dv8tion.jda.api.exceptions.InsufficientPermissionException;

import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.function.Consumer;

public class ClearCommands implements ServerCommand {

    @Override
    public void performCommand(String[] arguments, Guild guild, Member member, TextChannel textChannel, Message message, VoiceChannel voiceChannel) {
        EmbedBuilder embedBuilder = new EmbedBuilder();
        if (arguments.length < 2) {
            embedBuilder.setTitle("ü§°–ò–∑–≤–∏–Ω–∏—Ç–µ –º–∏—Å—Ç–µ—Ä, –Ω–æ –≤—ã –±—ã –Ω–µ –º–æ–≥–ª–∏, —Å—É–∫–∞ ,–ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –±–ª—è—Ç—å");
            textChannel.sendMessageEmbeds(embedBuilder.build()).queue();
        } else {
            try {
                try {
                    message.delete().queue();
                } catch (InsufficientPermissionException exception) {
                    textChannel.sendMessage("üòÖ–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ –¥–∞–ª –º–Ω–µ –ø—Ä–∞–≤–∞ –Ω–∞ —ç—Ç–æ").queue();
                }
                List<Message> messageList = textChannel.getHistory().retrievePast(Integer.parseInt(arguments[1])).complete();
                textChannel.deleteMessages(messageList).queue();
                embedBuilder.setTitle("‚ò∫–ö–∞—Ä–æ—á–∞ —è —É–¥–∞–ª–∏–ª —Ç–≤–æ—é –∂–∏–∑–Ω—å, –º–∞—Ç—å, —Å–æ–±–∞–∫—É –∏ —Ç—É —à–ª—é—Ö—É, –æ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ –∑–Ω–∞–µ—Ç —Ç–≤–æ—è –¥–µ–≤—É—à–∫–∞!");
                textChannel.sendMessageEmbeds(embedBuilder.build()).queue(message1 -> message1.delete().queueAfter(15, TimeUnit.SECONDS));
            } catch (IllegalArgumentException exception) {
                if (exception.toString().startsWith("java.lang.IllegalArgumentException: Message retrieval")) {
                    textChannel.sendMessage("üò°–î–∞ –±–ª—è—Ç—å, —è –Ω–µ –º–æ–≥—É –Ω–∞—Ö—É–π —É–¥–∞–ª–∏—Ç—å –±–æ–ª—å—à–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π").queue();
                } else {
                    textChannel.sendMessage("ü§î–û–¥–∏–Ω —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ, —Ç—É—Ç —É–∂–µ –Ω–µ –∫ —Ç–µ–±–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏, –∞ –∫ —Ä–∞–∑—Ä–∞–±—É").queue();
                }
            }
        }
    }
}



